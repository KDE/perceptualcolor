# SPDX-FileCopyrightText: Lukas Sommer <sommerluk@gmail.com>
# SPDX-License-Identifier: BSD-2-Clause OR MIT

Dependencies:
- 'on': ['Linux/Qt5', 'FreeBSD/Qt5', 'Windows/Qt5']
  'require':
    'frameworks/extra-cmake-modules': '@stable'
- 'on': ['Linux/Qt6', 'FreeBSD/Qt6', 'Windows/Qt6']
  'require':
    'frameworks/extra-cmake-modules': '@latest-kf6'

#- 'on': ['Linux', 'FreeBSD', 'Windows', 'macOS']

Options:
  #in-source-build: False
  use-ccache: False
  cmake-options: '-DADDITIONAL_WARNINGS=ON'
  #test-before-installing: False
  run-tests: True
  #tests-load-sensitive: False
  #per-test-timeout: 60
  setup-x-environment: True
  setup-dbus-session: True
  #force-inject-asan: False
  #ctest-arguments: ''
  #ctest-arguments: '--verbose'
  #ctest-arguments: '--extra-verbose'
  require-passing-tests-on: ['@all']
  run-cppcheck: True
  cppcheck-arguments: '--enable=all --suppress=unusedFunction --inline-suppr --language=c++ --std=c++17'
  cppcheck-ignore-files: []
  #run-gcovr: True
  # TODO KDE’s CI sets BUILD_COVERAGE as CMake argument. Make it actually work!?
  #gcovr-arguments: ''
  # TODO KDE’s CI also sets ECM_ENABLE_SANITIZERS but we do not recognize it
  # in our CMake file.
