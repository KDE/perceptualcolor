# SPDX-FileCopyrightText: Lukas Sommer <sommerluk@gmail.com>
# SPDX-License-Identifier: BSD-2-Clause OR MIT





# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1





# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:

  job-build-bigendian:
    machine:
      image: ubuntu-2204:current
    steps:
      # See: https://circleci.com/docs/configuration-reference/#steps
      - checkout
      - run:
          name: Enable run containers with different architectures
          command: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run:
          name: Run docker container for s390x
          command: docker run -it -d --platform linux/s390x --name ubuntu_bigendian ubuntu:22.04
      - run:
          name: Display information about the container’s virtual hardware
          command: |
            docker exec -it ubuntu_bigendian bash -c "lscpu"
            echo RAM in Mebibyte
            free --total --mebi
      - run:
          name: Set noninteractive environment
          command: docker exec -it ubuntu_bigendian bash -c "echo 'export DEBIAN_FRONTEND=noninteractive' >> $BASH_ENV"
      - run:
          name: Checkout code into the virtual machine
          command: |
            docker cp "$(pwd)" ubuntu_bigendian:/project
      - run:
          name: Install dependencies
          command: |
            docker exec -it ubuntu_bigendian bash -c "apt-get update --assume-yes"
            docker exec -it ubuntu_bigendian bash -c "apt-get install --assume-yes --no-install-recommends cmake make clang liblcms2-dev liblcms2-2 pkgconf extra-cmake-modules qt6-base-dev qt6-base-dev-tools libqt6svg6-dev qt6-l10n-tools xvfb openbox qt6-tools-dev qt6-tools-dev-tools libegl-dev"
      - run:
          name: Build project
          command: |
            docker exec -it ubuntu_bigendian bash -c '(
                set -ex
                Xvfb :90 -ac -screen 0 1600x1200x24+32 &
                cd /project
                PARALLEL_PROCESSES=`nproc --all`
                mkdir --parents build
                cd build
                cmake -DBUILD_WITH_QT6=ON ..
                openbox &
                cmake --build . --parallel $PARALLEL_PROCESSES
                export DISPLAY=":90"
                ctest --output-on-failure --progress
                cd ..
              )'

  job-build-macos:
    macos:
      # Use macOS executor for Mac build with the medium resource class
      xcode: 14.3.1
    environment:
      # From CircleCI documentation: “Homebrew, by default, will check for
      # updates at the start of any operation. […] If build speed […] are
      # a concern, this automatic update feature can be disabled. On
      # average, this can save up to two to five minutes per job.”
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      # Steps for Mac build
      - checkout
      - run:
          name: Install dependencies
          command: |
            # Dependencies for Mac build
            brew update
            brew install cmake make qt6 wget extra-cmake-modules
      - run:
          name: Build project
          command: |
            PARALLEL_PROCESSES=$(sysctl -n hw.ncpu)
            echo Number of available CPU threads: $PARALLEL_PROCESSES
            rm -rf build
            mkdir -p build
            cd build
            cmake -DBUILD_WITH_QT6=ON ..
            cmake --build . --parallel $PARALLEL_PROCESSES
            cmake --build . --target install --parallel $PARALLEL_PROCESSES
            ctest --output-on-failure --progress
            cd ..
            rm -rf buildexamples
            mkdir -p buildexamples
            cd buildexamples
            cmake -DBUILD_WITH_QT6=ON ../examples
            cmake --build . --parallel
            cd ..
            mkdir -p screenshots
            cd screenshots
            ../build/utils/generatescreenshots --native
            zip -r ../screenshots.zip .
            cd ..
      - store_artifacts:
          path: screenshots.zip





# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  workflow-build:
    jobs:
      - job-build-macos:
          filters:
            branches:
              only:
                - /^ci_mac_.*/
      - job-build-bigendian:
          filters:
            branches:
              only:
                - /^ci_bigendian_.*/
